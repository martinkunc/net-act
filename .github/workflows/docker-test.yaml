name: 'docker-image-test'

on: 
  push:
    paths:
      - 'Dockerfile.test'

jobs:
  docker-image-test:
    runs-on: ubuntu

    steps:
    - uses: actions/checkout@v2

    - name: Install docker
      run: |
        apt update 
        apt install -y ca-certificates curl gnupg
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

        echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        tee /etc/apt/sources.list.d/docker.list > /dev/null
        apt update 

        apt install -y docker-ce

        curl -o /usr/local/bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe



    - name: Build the Docker image
      run: docker build . --file Dockerfile.test --tag consoleapp1-build-image:latest
    
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: |
          consoleapp1-build/consoleapp1-build-image
          ghcr.io/${{ github.repository }}

    - name: Publish docker to github
    # if:  env.LOCAL_RUN != null

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile.test
        push: ${{ github.ref_type == 'tag' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
